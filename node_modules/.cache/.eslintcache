[{"/Users/rishabhs/Documents/GitHub/csco/src/index.js":"1","/Users/rishabhs/Documents/GitHub/csco/src/reportWebVitals.js":"2","/Users/rishabhs/Documents/GitHub/csco/src/App.js":"3","/Users/rishabhs/Documents/GitHub/csco/src/components/header.js":"4","/Users/rishabhs/Documents/GitHub/csco/src/components/navigation.js":"5","/Users/rishabhs/Documents/GitHub/csco/src/pages/home.js":"6","/Users/rishabhs/Documents/GitHub/csco/src/pages/Home.js":"7","/Users/rishabhs/Documents/GitHub/csco/src/components/photogallery.js":"8","/Users/rishabhs/Documents/GitHub/csco/src/pages/Login.js":"9"},{"size":535,"mtime":1699749372287,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1699749372287,"results":"12","hashOfConfig":"11"},{"size":660,"mtime":1700263634081,"results":"13","hashOfConfig":"11"},{"size":353,"mtime":1700263203129,"results":"14","hashOfConfig":"11"},{"size":304,"mtime":1700261030416,"results":"15","hashOfConfig":"11"},{"size":1149,"mtime":1700263506583,"results":"16","hashOfConfig":"11"},{"size":1149,"mtime":1700263506583,"results":"17","hashOfConfig":"11"},{"size":306,"mtime":1700261030417,"results":"18","hashOfConfig":"11"},{"size":2536,"mtime":1700263203131,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1x05xmt",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"23"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"23"},"/Users/rishabhs/Documents/GitHub/csco/src/index.js",[],[],["50","51","52","53","54","55"],"/Users/rishabhs/Documents/GitHub/csco/src/reportWebVitals.js",[],[],"/Users/rishabhs/Documents/GitHub/csco/src/App.js",["56"],[],"/Users/rishabhs/Documents/GitHub/csco/src/components/header.js",[],[],"/Users/rishabhs/Documents/GitHub/csco/src/components/navigation.js",["57"],[],"/Users/rishabhs/Documents/GitHub/csco/src/pages/home.js",[],[],"/Users/rishabhs/Documents/GitHub/csco/src/pages/Home.js",[],[],"/Users/rishabhs/Documents/GitHub/csco/src/components/photogallery.js",["58"],[],"import React from 'react';\nimport './photogallery.css';\n\nconst PhotoGallery = ({ images }) => {\n  return (\n    <div className=\"photo-gallery\">\n      {images.map((image, index) => (\n        <img key={index} src={image} alt={`Photo ${index + 1}`} />\n      ))}\n    </div>\n  );\n};\n\nexport default PhotoGallery;","/Users/rishabhs/Documents/GitHub/csco/src/pages/Login.js",["59","60","61","62","63","64"],[],"import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport React from 'react';\nimport './Login.css'; \n\nfunction Login() {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  let navigate = useNavigate();\n\n  const handleLoginSubmit = (event) => {\n    event.preventDefault();\n    if (username == \"\" || password == \"\") {\n      console.log(\"Username and password fields cannot be blank\")\n      return;\n    }\n    fetch('http://localhost:4000/api/logins', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('User logged in!:', data)\n      navigate('/home')\n    })\n    .catch(error => console.error('Error signing up:', error));\n  };\n\n  const handleSignUpSubmit = (event) => {\n    event.preventDefault();\n    if (username == \"\" || password == \"\") {\n      console.log(\"Username and password fields cannot be blank\")\n      return;\n    }\n    fetch('http://localhost:4000/api/logins', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('User signed up!:', data)\n      navigate('/home')\n    })\n    .catch(error => console.error('Error signing up:', error));\n  };\n\n  return (\n    <div className=\"Login-top\">\n      {/* <header className=\"login-header\">\n        <h1>\n          CSCO\n        </h1>\n        <p>Log into your account</p>\n      </header> */}\n      <p>Log into your account</p>\n      <div className='Login-section'>\n        <form>\n          <div className=\"form-row\">\n            <input\n              type=\"text\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n              placeholder=\"Username\"\n            />\n          </div>\n\n          <div className=\"form-row\">\n            <input\n              type=\"text\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              placeholder=\"Password\"\n            />\n            </div>\n        </form> \n        {/* <button className=\"LoginButton\" type=\"submit\" onClick={handleLoginSubmit}>Login</button> */}\n        <button className=\"SignUpButton\" type=\"submit\" onClick={handleSignUpSubmit}>Sign Up</button>\n\n\n\n      </div>\n    </div>\n  );\n}\n\n\nexport default Login;\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":16},{"ruleId":"81","severity":1,"message":"82","line":8,"column":42,"nodeType":"83","messageId":"84","endLine":9,"endColumn":9},{"ruleId":"85","severity":1,"message":"86","line":8,"column":9,"nodeType":"87","endLine":8,"endColumn":67},{"ruleId":"77","severity":1,"message":"88","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":19},{"ruleId":"77","severity":1,"message":"89","line":13,"column":9,"nodeType":"79","messageId":"80","endLine":13,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":15,"column":18,"nodeType":"92","messageId":"93","endLine":15,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":15,"column":36,"nodeType":"92","messageId":"93","endLine":15,"endColumn":38},{"ruleId":"90","severity":1,"message":"91","line":36,"column":18,"nodeType":"92","messageId":"93","endLine":36,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":36,"column":36,"nodeType":"92","messageId":"93","endLine":36,"endColumn":38},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["94"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'handleLoginSubmit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-object-constructor"]