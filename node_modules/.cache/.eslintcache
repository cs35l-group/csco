[{"/Users/ishaangupta/Downloads/csco/src/index.js":"1","/Users/ishaangupta/Downloads/csco/src/reportWebVitals.js":"2","/Users/ishaangupta/Downloads/csco/src/App.js":"3","/Users/ishaangupta/Downloads/csco/src/pages/home.js":"4","/Users/ishaangupta/Downloads/csco/src/pages/Profile.js":"5","/Users/ishaangupta/Downloads/csco/src/pages/PublicProfile.js":"6","/Users/ishaangupta/Downloads/csco/src/pages/LandingPage.js":"7","/Users/ishaangupta/Downloads/csco/src/pages/Login.js":"8","/Users/ishaangupta/Downloads/csco/src/components/header.js":"9","/Users/ishaangupta/Downloads/csco/src/components/signoutbutton.js":"10","/Users/ishaangupta/Downloads/csco/src/components/photogallery.js":"11","/Users/ishaangupta/Downloads/csco/src/components/FileUpload.js":"12","/Users/ishaangupta/Downloads/csco/src/components/ImageColorExtractor.js":"13","/Users/ishaangupta/Downloads/csco/src/components/searchbar.js":"14"},{"size":535,"mtime":1699749416096,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1699749416096,"results":"17","hashOfConfig":"16"},{"size":893,"mtime":1701493153028,"results":"18","hashOfConfig":"16"},{"size":1613,"mtime":1701746683599,"results":"19","hashOfConfig":"16"},{"size":7018,"mtime":1701747325985,"results":"20","hashOfConfig":"16"},{"size":2714,"mtime":1701746708134,"results":"21","hashOfConfig":"16"},{"size":2954,"mtime":1701493153030,"results":"22","hashOfConfig":"16"},{"size":3659,"mtime":1701493153030,"results":"23","hashOfConfig":"16"},{"size":982,"mtime":1701739745179,"results":"24","hashOfConfig":"16"},{"size":402,"mtime":1700869838445,"results":"25","hashOfConfig":"16"},{"size":2577,"mtime":1701897599178,"results":"26","hashOfConfig":"16"},{"size":4126,"mtime":1701493153028,"results":"27","hashOfConfig":"16"},{"size":518,"mtime":1701493153028,"results":"28","hashOfConfig":"16"},{"size":1936,"mtime":1701493153030,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uktl1q",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ishaangupta/Downloads/csco/src/index.js",[],[],"/Users/ishaangupta/Downloads/csco/src/reportWebVitals.js",[],[],"/Users/ishaangupta/Downloads/csco/src/App.js",["75"],[],"/Users/ishaangupta/Downloads/csco/src/pages/home.js",["76","77","78","79"],[],"import React, { useState } from 'react';\nimport './home.css'\nimport PhotoGallery from '../components/photogallery'\nimport Header from '../components/header'\nimport SearchBar from '../components/searchbar'\nimport SignOut from '../components/signoutbutton'\nimport { useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom';\n\n\n\nfunction Home() {\n  let navigate = useNavigate();\n  const [posts, setPosts] = useState([]) \n\n  useEffect(() => {\n    const fetchImages = async () => {\n        const token = \"HOME\";\n        const response = await fetch('http://localhost:4000/api/posts', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n            const newArr = [];\n            data.posts.map((element) => {\n                var obj = {\n                    url: element.imageUrl,\n                    caption: element.caption ? element.caption : null,\n                    vibes: element.vibes ? element.vibes : null\n                };\n                newArr.push(obj);\n            });\n\n            setPosts(newArr.reverse());\n        } else {\n          navigate('/')\n        }\n    }\n  \n    fetchImages();\n}, []); \n\n\n\n  return (\n    <>\n      <div>\n        <Header />\n      </div>\n      <div>\n        <p>Your memories and inspiration, all in one place.</p> \n      </div>\n      <div>\n        <SearchBar />\n      </div>\n      <div className='photos'>\n        <PhotoGallery images={posts} />\n      </div>  \n    </>\n  );\n};\nexport default Home;","/Users/ishaangupta/Downloads/csco/src/pages/Profile.js",["80","81","82","83","84","85","86"],[],"import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport PhotoGallery from '../components/photogallery';\nimport './Profile.css'\nimport React from 'react';\nimport SignOut from '../components/signoutbutton';\nimport FileUpload from '../components/FileUpload'; \nimport Header from '../components/header';\n\n/* image Processing */\nimport ImageColorExtractor from '../components/ImageColorExtractor'\n\nfunction Profile() {\n    let navigate = useNavigate();\n    \n    /* For loading existing user information */\n    const [userData, setUserData] = useState(null);\n    const [images, setImages] = useState([]);\n    const [caption, setCaption] = useState(null);\n\n    /* For new image upload */\n    const [newImageObj, setNewImgObj] = useState(null);\n    const [newImageUrl, setnewImageUrl] = useState(null); // holds the src of new image\n    const [domColor, setDomColor] = useState('black');\n\n    useEffect(() => {\n        fetchUserProfile();\n        fetchImages();\n    }, []); \n\n    const handleHome = (event) => {\n        event.preventDefault();\n        navigate('/home');\n    }\n\n    const handlePost = (event) => {\n        event.preventDefault();\n        const token = localStorage.getItem(\"token\");\n\n        if (newImageUrl.includes('blob')){ // this is a locally uploaded file\n            const formData = new FormData();\n            formData.append(\"image\", newImageObj);\n            formData.append(\"caption\", caption ? caption : null);\n            fetch('http://localhost:4000/api/image', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: formData,\n            }).then(async response => {\n            const data = await response.json();\n                if (response.ok) {\n                    console.log(\"Posted: \", data)\n                    setnewImageUrl(null);\n                    setCaption(null);\n                    fetchImages();\n                    setDomColor(\"black\");\n                    return;\n                } else {\n                    alert(\"Invalid URL\")\n                    console.log(response);\n                }\n            })\n            .catch(err => console.error('Error posting:', err));\n            return;\n        }\n        else if (newImageUrl.includes('https://')) {\n            fetch('http://localhost:4000/api/posts', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    post: newImageUrl,\n                    caption: caption ? caption : null,\n                    created_at: Date.now(),\n                }),\n            })\n            .then(async response => {\n                const data = await response.json();\n                if (response.ok) {\n                    setnewImageUrl(null);\n                    setCaption(null);\n                    fetchImages();\n                    setDomColor(\"black\");\n                    return;\n                } else {\n                    alert(\"Invalid URL\")\n                    console.log(response);\n                }\n            })\n            .catch(err => console.error('Error posting:', err));\n        }\n\n        fetchImages()\n    }\n\n    const fetchUserProfile = async () => {\n        const token = localStorage.getItem('token');\n        \n        if(!token) {\n            console.log(\"NO TOKEN\")\n            navigate('/')\n        }\n\n        const response = await fetch('http://localhost:4000/api/user-page', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setUserData(data);\n        } else {\n          navigate('/')\n        }\n    };\n\n    const fetchImages = async () => {\n        const token = localStorage.getItem('token');\n        if(!token) {\n            console.log(\"NO TOKEN\")\n            navigate('/')\n        }\n        const response = await fetch('http://localhost:4000/api/posts', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n            const newArr = [];\n            data.posts.map((element) => {\n                var obj = {\n                    url: element.imageUrl,\n                    caption: element.caption ? element.caption : null,\n                    vibes: element.vibes ? element.vibes : null\n                };\n                newArr.push(obj);\n            });\n\n            setImages(newArr.reverse());\n        } else {\n            navigate('/')\n        }\n    }\n\n    const uploadimages = (imageFiles) => {\n        setNewImgObj(imageFiles[0]);\n        const url = URL.createObjectURL(imageFiles[0]) // create URL object from image\n        setnewImageUrl(url);\n    }\n\n    const handlePaste = (e) => {\n        var pastedData;\n        e.stopPropagation();\n        e.preventDefault();\n        pastedData = (e.clipboardData || window.clipboardData).getData('Text');\n        setnewImageUrl(pastedData);\n    }\n\n    if (!userData) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <>\n        <div className=\"header\">\n            <Header />\n        </div>\n        <div className=\"profile\" onPaste={handlePaste}\n            style={{ background: \"linear-gradient(0deg, rgba(18,18,18,1) 80%, \" + domColor + \" 100%)\" }}\n        >\n                <h1>@{userData.username}</h1>\n                <br></br>\n                {newImageUrl == null ?\n                    <FileUpload handleUploads={uploadimages} />\n                    :\n                    // show this if image is staged for upload:\n                    <>\n                        <ImageColorExtractor imageUrl={newImageUrl} setDomColor={(color) => { setDomColor(color); } } />\n                        <div className=\"img-con\">\n                            <div className=\"removeBtn\" onClick={() => { setnewImageUrl(null); setDomColor('black'); } }>x</div>\n                            <img className=\"newImage\" src={newImageUrl}></img>\n                        </div>\n                        <textarea className=\"caption-edit\" placeholder=\"Write something about this memory\" onChange={(e) => { setCaption(e.target.value); } }></textarea>\n                        <button className=\"Post\" onClick={handlePost}>Post Image</button>\n                    </>}\n                <div className=\"photos\">\n                    <PhotoGallery images={images} />\n                </div>\n                {/*         <div className=\"navigation\">\n                    <button className=\"navigate\" onClick={handleHome}>Home</button>\n                    <SignOut />\n                </div> */}\n\n\n            </div></>\n    );\n}\n\nexport default Profile;","/Users/ishaangupta/Downloads/csco/src/pages/PublicProfile.js",["87","88","89","90","91"],[],"import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport PhotoGallery from '../components/photogallery';\nimport './Profile.css'\nimport React from 'react';\nimport SignOut from '../components/signoutbutton';\n\n\n\nfunction OtherProfile() {\n    let navigate = useNavigate();\n    \n    const [userData, setUserData] = useState(null);\n    const [images, setImages] = useState([]);\n    const [post, setPost] = useState([null]);\n\n    const handleHome = (event) => {\n        event.preventDefault();\n        navigate('/home')\n    }\n\n    const fetchUserProfile = async () => {\n        const token = localStorage.getItem('otherToken');\n        \n        if(!token) {\n            console.log(\"NO TOKEN\")\n            navigate('/home')\n        }\n\n        const response = await fetch('http://localhost:4000/api/user-page', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setUserData(data);\n        } else {\n          navigate('/home')\n        }\n    };\n\n    const fetchImages = async () => {\n        const token = localStorage.getItem('otherToken');\n        if(!token) {\n            console.log(\"NO TOKEN\")\n            navigate('/')\n        }\n        const response = await fetch('http://localhost:4000/api/posts', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n            const newArr = [];\n            data.posts.map((element) => {\n                var obj = {\n                    url: element.imageUrl,\n                    caption: element.caption ? element.caption : null,\n                    vibes: element.vibes ? element.vibes : null\n                };\n                newArr.push(obj);\n            });\n            setImages(newArr.reverse());\n        } else {\n            navigate('/home')\n        }\n    }\n\n    useEffect(() => {\n        fetchUserProfile();\n        fetchImages();\n    }, []); \n\n    if (!userData) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"profile\">\n            <h1>@{userData.username}</h1>\n            <div className=\"photos\">\n                <PhotoGallery images={images} />\n\n            </div>\n            <div className=\"navigation\">\n                <button className=\"navigate\" onClick={handleHome}>Home</button>\n                <SignOut />\n            </div>    \n\n                   \n        </div>\n    );\n}\n\nexport default OtherProfile;","/Users/ishaangupta/Downloads/csco/src/pages/LandingPage.js",["92","93","94","95","96","97","98"],[],"/Users/ishaangupta/Downloads/csco/src/pages/Login.js",["99","100","101","102","103","104","105","106"],[],"/Users/ishaangupta/Downloads/csco/src/components/header.js",["107"],[],"/Users/ishaangupta/Downloads/csco/src/components/signoutbutton.js",[],[],"/Users/ishaangupta/Downloads/csco/src/components/photogallery.js",["108","109","110","111","112","113","114","115"],[],"/Users/ishaangupta/Downloads/csco/src/components/FileUpload.js",["116","117"],[],"/Users/ishaangupta/Downloads/csco/src/components/ImageColorExtractor.js",["118"],[],"/Users/ishaangupta/Downloads/csco/src/components/searchbar.js",["119"],[],{"ruleId":"120","severity":1,"message":"121","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"124","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":15},{"ruleId":"120","severity":1,"message":"125","line":8,"column":10,"nodeType":"122","messageId":"123","endLine":8,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":28,"column":38,"nodeType":"128","messageId":"129","endLine":28,"endColumn":40},{"ruleId":"130","severity":1,"message":"131","line":44,"column":4,"nodeType":"132","endLine":44,"endColumn":6,"suggestions":"133"},{"ruleId":"120","severity":1,"message":"125","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},{"ruleId":"120","severity":1,"message":"124","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":15},{"ruleId":"130","severity":1,"message":"134","line":30,"column":8,"nodeType":"132","endLine":30,"endColumn":10,"suggestions":"135"},{"ruleId":"120","severity":1,"message":"136","line":32,"column":11,"nodeType":"122","messageId":"123","endLine":32,"endColumn":21},{"ruleId":"120","severity":1,"message":"137","line":82,"column":23,"nodeType":"122","messageId":"123","endLine":82,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":137,"column":38,"nodeType":"128","messageId":"129","endLine":137,"endColumn":40},{"ruleId":"138","severity":1,"message":"139","line":188,"column":29,"nodeType":"140","endLine":188,"endColumn":73},{"ruleId":"120","severity":1,"message":"125","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},{"ruleId":"120","severity":1,"message":"141","line":16,"column":12,"nodeType":"122","messageId":"123","endLine":16,"endColumn":16},{"ruleId":"120","severity":1,"message":"142","line":16,"column":18,"nodeType":"122","messageId":"123","endLine":16,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":60,"column":38,"nodeType":"128","messageId":"129","endLine":60,"endColumn":40},{"ruleId":"130","severity":1,"message":"134","line":77,"column":8,"nodeType":"132","endLine":77,"endColumn":10,"suggestions":"143"},{"ruleId":"120","severity":1,"message":"144","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":18},{"ruleId":"120","severity":1,"message":"145","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":21},{"ruleId":"138","severity":1,"message":"139","line":47,"column":17,"nodeType":"140","endLine":47,"endColumn":238},{"ruleId":"138","severity":1,"message":"139","line":48,"column":17,"nodeType":"140","endLine":48,"endColumn":238},{"ruleId":"138","severity":1,"message":"139","line":49,"column":17,"nodeType":"140","endLine":49,"endColumn":241},{"ruleId":"138","severity":1,"message":"139","line":50,"column":17,"nodeType":"140","endLine":50,"endColumn":139},{"ruleId":"138","severity":1,"message":"139","line":51,"column":17,"nodeType":"140","endLine":51,"endColumn":239},{"ruleId":"146","severity":1,"message":"147","line":23,"column":18,"nodeType":"148","messageId":"149","endLine":23,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":23,"column":36,"nodeType":"148","messageId":"149","endLine":23,"endColumn":38},{"ruleId":"146","severity":1,"message":"147","line":50,"column":18,"nodeType":"148","messageId":"149","endLine":50,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":50,"column":36,"nodeType":"148","messageId":"149","endLine":50,"endColumn":38},{"ruleId":"146","severity":1,"message":"147","line":87,"column":19,"nodeType":"148","messageId":"149","endLine":87,"endColumn":21},{"ruleId":"138","severity":1,"message":"139","line":96,"column":11,"nodeType":"140","endLine":96,"endColumn":70},{"ruleId":"150","severity":1,"message":"151","line":99,"column":11,"nodeType":"140","endLine":99,"endColumn":65},{"ruleId":"150","severity":1,"message":"151","line":100,"column":11,"nodeType":"140","endLine":100,"endColumn":61},{"ruleId":"120","severity":1,"message":"144","line":2,"column":17,"nodeType":"122","messageId":"123","endLine":2,"endColumn":25},{"ruleId":"120","severity":1,"message":"152","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":19},{"ruleId":"120","severity":1,"message":"144","line":4,"column":21,"nodeType":"122","messageId":"123","endLine":4,"endColumn":29},{"ruleId":"126","severity":1,"message":"153","line":12,"column":36,"nodeType":"128","messageId":"154","endLine":12,"endColumn":38},{"ruleId":"146","severity":1,"message":"147","line":19,"column":23,"nodeType":"148","messageId":"149","endLine":19,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":23,"column":15,"nodeType":"140","endLine":23,"endColumn":85},{"ruleId":"126","severity":1,"message":"153","line":45,"column":36,"nodeType":"128","messageId":"154","endLine":45,"endColumn":38},{"ruleId":"146","severity":1,"message":"157","line":47,"column":23,"nodeType":"148","messageId":"149","endLine":47,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":51,"column":17,"nodeType":"140","endLine":51,"endColumn":87},{"ruleId":"146","severity":1,"message":"157","line":13,"column":117,"nodeType":"148","messageId":"149","endLine":13,"endColumn":119},{"ruleId":"120","severity":1,"message":"158","line":30,"column":9,"nodeType":"122","messageId":"123","endLine":30,"endColumn":19},{"ruleId":"120","severity":1,"message":"144","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"159","line":48,"column":11,"nodeType":"122","messageId":"123","endLine":48,"endColumn":25},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'SignOut' is defined but never used.","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["160"],"React Hook useEffect has missing dependencies: 'fetchImages' and 'fetchUserProfile'. Either include them or remove the dependency array.",["161"],"'handleHome' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'post' is assigned a value but never used.","'setPost' is assigned a value but never used.",["162"],"'useState' is defined but never used.","'useNavigate' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","Expected '!==' and instead saw '!='.","'handlePost' is assigned a value but never used.","'handleKeyPress' is assigned a value but never used.",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},"Update the dependencies array to be: [navigate]",{"range":"168","text":"169"},"Update the dependencies array to be: [fetchImages, fetchUserProfile]",{"range":"170","text":"171"},{"range":"172","text":"171"},[1283,1285],"[navigate]",[1046,1048],"[fetchImages, fetchUserProfile]",[2200,2202]]